Given an array nums of n positive integers. The task is to find the longest Zig-Zag subsequence problem such that all elements of this are alternating (numsi-1 < numsi > numsi+1 or numsi-1 > numsi < numsi+1).
 

Example 1:

Input: nums = {1,5,4}
Output: 3
Explanation: The entire sequenece is a 
Zig-Zag sequence.



def longestZigZagSubsequence(nums):
    if not nums:
        return 0

    n = len(nums)
    up = [1] * n
    down = [1] * n

    for i in range(1, n):
        for j in range(i):
            if nums[i] > nums[j]:
                up[i] = max(up[i], down[j] + 1)
            elif nums[i] < nums[j]:
                down[i] = max(down[i], up[j] + 1)

    return max(max(up), max(down))

# Example
nums = [1, 5, 4]
result = longestZigZagSubsequence(nums)
print(result)
